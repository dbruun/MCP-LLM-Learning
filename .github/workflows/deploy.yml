name: Check Build and Deploy to Azure Web App
on:
  workflow_dispatch:
    inputs:
      project_number:
        description: 'PCM Project Number (RITM ticket)'
        required: false
        default: 'RITM1185178'
        type: string
  push:
    branches:
      - main
jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8.0.x'

      - name: Restore dependencies
        run: dotnet restore

      - name: Build
        run: dotnet build --configuration Release

      - name: Publish MCPCopilotUI
        run: dotnet publish MCPCopilotUI/MCPCopilotUI.csproj --configuration Release --output ./publish

      - name: Login to Azure
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Create/Update Storage Account with Tags
        run: |
          # Set variables (customize these via secrets or workflow inputs)
          RG="${{ secrets.AZURE_RESOURCE_GROUP }}"
          LOCATION="${{ secrets.AZURE_LOCATION || 'eastus' }}"
          STORAGE_NAME="${{ secrets.AZURE_STORAGE_NAME }}"
          
          # Get committer email from the git commit
          COMMITTER_EMAIL="${{ github.event.head_commit.author.email }}"
          # Fallback to github actor if email not available
          if [ -z "$COMMITTER_EMAIL" ]; then
            COMMITTER_EMAIL="${{ github.actor }}@users.noreply.github.com"
          fi
          
          # Get project number from workflow input (manual run) or use default (push)
          PROJECT_NUMBER="${{ github.event.inputs.project_number || 'RITM1185178' }}"
          
          # Validate project number starts with RITM
          if [[ ! "$PROJECT_NUMBER" =~ ^RITM ]]; then
            echo "❌ Error: Project number must start with 'RITM' (got: $PROJECT_NUMBER)"
            exit 1
          fi
          
          echo "✅ Project number validated: $PROJECT_NUMBER"
          
          # Generate timestamp and random values for additional tags
          TIMESTAMP=$(date +%s)
          RUN_ID="${{ github.run_id }}"
          RUN_NUMBER="${{ github.run_number }}"
          COMMIT_SHA="${{ github.sha }}"
          
          # Create resource group if it doesn't exist
          az group create --name $RG --location $LOCATION
          
          # Create or update storage account with 50 tags (Azure limit)
          az storage account create \
            --name $STORAGE_NAME \
            --resource-group $RG \
            --location $LOCATION \
            --sku Standard_LRS \
            --kind StorageV2 \
            --tags \
              pcm-application_name_sysid=placeholder \
              pcm-built_by="$COMMITTER_EMAIL" \
              pcm-business_service_sysid=SAVNS \
              pcm-project_number="$PROJECT_NUMBER" \
              pcm-sensitive_data_cjis=yes \
              pcm-sensitive_data_ferpa=no \
              pcm-sensitive_data_fti=no \
              pcm-sensitive_data_pci=no \
              pcm-sensitive_data_phi=no \
              pcm-sensitive_data_pii=yes \
              pcm-tag_1="SAVNS HB2582" \
              pcm-tag_2=placeholder \
              pcm-tag_3=placeholder \
              deployed-by="${{ github.actor }}" \
              deployment-timestamp="$TIMESTAMP" \
              github-run-id="$RUN_ID" \
              github-run-number="$RUN_NUMBER" \
              commit-sha="${COMMIT_SHA:0:8}" \
              branch="${{ github.ref_name }}" \
              workflow="${{ github.workflow }}" \
              environment="production" \
              cost-center="CC-$RANDOM" \
              department="Engineering" \
              team="Platform" \
              owner="${{ github.repository_owner }}" \
              repository="${{ github.repository }}" \
              managed-by="github-actions" \
              automation="enabled" \
              backup-policy="daily" \
              retention-days="90" \
              compliance="required" \
              security-zone="internal" \
              data-classification="confidential" \
              service-tier="standard" \
              monitoring="enabled" \
              logging="enabled" \
              auto-tag-1="value-$RANDOM" \
              auto-tag-2="value-$RANDOM" \
              auto-tag-3="value-$RANDOM" \
              auto-tag-4="value-$RANDOM" \
              auto-tag-5="value-$RANDOM" \
              custom-id-1="$(uuidgen | cut -d'-' -f1)" \
              custom-id-2="$(uuidgen | cut -d'-' -f1)" \
              custom-id-3="$(uuidgen | cut -d'-' -f1)" \
              region="$LOCATION" \
              disaster-recovery="enabled" \
              high-availability="enabled" \
              performance-tier="standard" \
              network-access="private" \
              firewall-enabled="yes"

      # - name: Deploy to Azure Web App
      #   uses: azure/webapps-deploy@v2
      #   with:
      #     app-name: ${{ secrets.AZURE_WEBAPP_NAME }}
      #     package: ./publish