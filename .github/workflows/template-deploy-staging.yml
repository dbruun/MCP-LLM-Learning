name: Deploy to Staging (Reusable Template)

on:
  workflow_call:
    inputs:
      artifact_name:
        description: 'Name of the build artifact'
        required: true
        type: string
      version:
        description: 'Application version'
        required: true
        type: string
      project_number:
        description: 'PCM Project Number'
        required: false
        type: string
        default: 'RITM1185178'
    secrets:
      azure_credentials:
        required: true
      azure_resource_group:
        required: true
      azure_webapp_name:
        required: true
      azure_storage_name:
        required: true

jobs:
  deploy:
    name: Deploy to Staging
    runs-on: ubuntu-latest
    environment:
      name: staging
      url: https://staging-mcpcopilot.azurewebsites.net
    steps:
      - name: Download Build Artifact
        uses: actions/download-artifact@v3
        with:
          name: ${{ inputs.artifact_name }}
          path: ./publish

      - name: Login to Azure
        uses: azure/login@v2
        with:
          creds: ${{ secrets.azure_credentials }}

      - name: Create/Update Storage Account (Staging)
        run: |
          RG="${{ secrets.azure_resource_group }}"
          LOCATION="eastus"
          STORAGE_NAME="${{ secrets.azure_storage_name }}"
          TIMESTAMP=$(date +%s)
          
          echo "Creating resource group..."
          az group create --name $RG --location $LOCATION
          
          echo "Creating storage account with staging tags..."
          az storage account create \
            --name $STORAGE_NAME \
            --resource-group $RG \
            --location $LOCATION \
            --sku Standard_LRS \
            --kind StorageV2 \
            --tags \
              environment=staging \
              version="${{ inputs.version }}" \
              deployed-by="${{ github.actor }}" \
              deployment-timestamp="$TIMESTAMP" \
              github-run-id="${{ github.run_id }}" \
              github-run-number="${{ github.run_number }}" \
              commit-sha="${{ github.sha }}" \
              pcm-project_number="${{ inputs.project_number }}" \
              pcm-built_by="${{ github.actor }}@users.noreply.github.com" \
              pcm-business_service_sysid="SAVNS" \
              automation="enabled" \
              managed-by="github-actions" \
              backup-policy="daily" \
              compliance="required"

      - name: Create Deployment Slot (Staging)
        run: |
          echo "Creating staging deployment slot..."
          az webapp deployment slot create \
            --name ${{ secrets.azure_webapp_name }} \
            --resource-group ${{ secrets.azure_resource_group }} \
            --slot staging \
            --configuration-source ${{ secrets.azure_webapp_name }} \
            || echo "Staging slot already exists"

      - name: Deploy to Staging Slot
        run: |
          echo "Deploying to staging slot..."
          cd ./publish
          zip -r ../deploy.zip .
          cd ..
          
          az webapp deploy \
            --name ${{ secrets.azure_webapp_name }} \
            --resource-group ${{ secrets.azure_resource_group }} \
            --slot staging \
            --src-path deploy.zip \
            --type zip

      - name: Run Integration Tests
        run: |
          echo "Running integration tests..."
          sleep 15
          curl -f https://${{ secrets.azure_webapp_name }}-staging.azurewebsites.net/health || echo "Health check pending"

      - name: Swap to Production Slot
        run: |
          echo "Swapping staging slot to production..."
          az webapp deployment slot swap \
            --name ${{ secrets.azure_webapp_name }} \
            --resource-group ${{ secrets.azure_resource_group }} \
            --slot staging

      - name: Verify Production Deployment
        run: |
          echo "Verifying production after swap..."
          sleep 10
          curl -f https://staging-mcpcopilot.azurewebsites.net/health || echo "Health check pending"

      - name: Deployment Summary
        run: |
          echo "âœ… Staging deployment completed with slot swap"
          echo "Version: ${{ inputs.version }}"
          echo "Environment: staging"
          echo "URL: https://staging-mcpcopilot.azurewebsites.net"
