name: Deploy to Staging (Reusable Template)

on:
  workflow_call:
    inputs:
      artifact_name:
        description: 'Name of the build artifact'
        required: true
        type: string
      version:
        description: 'Application version'
        required: true
        type: string
      project_number:
        description: 'PCM Project Number'
        required: false
        type: string
        default: 'RITM1185178'
    secrets:
      azure_credentials:
        required: true
      azure_resource_group:
        required: true
      azure_webapp_name:
        required: true
      azure_storage_name:
        required: true

jobs:
  deploy:
    name: Deploy to Staging
    runs-on: ubuntu-latest
    environment:
      name: staging
      url: https://staging-mcpcopilot.azurewebsites.net
    steps:
      - name: Download Build Artifact
        uses: actions/download-artifact@v4
        with:
          name: ${{ inputs.artifact_name }}
          path: ./publish

      - name: Login to Azure
        uses: azure/login@v2
        with:
          creds: ${{ secrets.azure_credentials }}

      - name: Create/Update Storage Account (Staging)
        run: |
          RG="${{ secrets.azure_resource_group }}"
          LOCATION="eastus"
          STORAGE_NAME="${{ secrets.azure_storage_name }}"
          TIMESTAMP=$(date +%s)
          
          echo "Creating resource group..."
          az group create --name $RG --location $LOCATION
          
          echo "Creating storage account with staging tags..."
          az storage account create \
            --name $STORAGE_NAME \
            --resource-group $RG \
            --location $LOCATION \
            --sku Standard_LRS \
            --kind StorageV2 \
            --tags \
              pcm-application_name_sysid=MCPCopilotUI \
              pcm-built_by="${{ github.actor }}@users.noreply.github.com" \
              pcm-business_service_sysid=SAVNS \
              pcm-project_number="$PROJECT_NUMBER" \
              pcm-sensitive_data_cjis=yes \
              pcm-sensitive_data_ferpa=no \
              pcm-sensitive_data_fti=no \
              pcm-sensitive_data_pci=no \
              pcm-sensitive_data_phi=no \
              pcm-sensitive_data_pii=yes \
              pcm-tag_1="SAVNS HB2582" \
              pcm-tag_2=production \
              pcm-tag_3=mcpcopilot \
              environment=staging \
              version="${{ inputs.version }}" \
              deployed-by="${{ github.actor }}" \
              deployment-timestamp="$TIMESTAMP" \
              github-run-id="${{ github.run_id }}" \
              github-run-number="${{ github.run_number }}" \
              commit-sha="${{ github.sha }}" \
              pcm-project_number="${{ inputs.project_number }}" \
             
        
              automation="enabled" \
              managed-by="github-actions" \
              backup-policy="daily" \
              compliance="required"

      - name: Verify Storage Account
        run: |
          echo "Verifying storage account deployment..."
          STORAGE_NAME="${{ secrets.azure_storage_name }}"
          RG="${{ secrets.azure_resource_group }}"
          
          # Check if storage account exists and is available
          echo "Checking storage account status..."
          az storage account show \
            --name $STORAGE_NAME \
            --resource-group $RG \
            --query '{name:name, location:location, sku:sku.name, status:statusOfPrimary, provisioningState:provisioningState}' \
            -o table
          
          # Verify required tags exist
          echo "\nVerifying staging tags..."
          az storage account show \
            --name $STORAGE_NAME \
            --resource-group $RG \
            --query 'tags' \
            -o json
          
          # Test storage connectivity
          echo "\nTesting storage connectivity..."
          az storage account keys list \
            --account-name $STORAGE_NAME \
            --resource-group $RG \
            --query '[0].value' \
            -o tsv > /dev/null
          
          echo "\n✅ Storage account verification completed"

      - name: Run Integration Tests
        run: |
          echo "Running storage integration tests..."
          STORAGE_NAME="${{ secrets.azure_storage_name }}"
          RG="${{ secrets.azure_resource_group }}"
          
          # Get connection string
          CONN_STRING=$(az storage account show-connection-string \
            --name $STORAGE_NAME \
            --resource-group $RG \
            --query connectionString \
            -o tsv)
          
          # Test blob service
          echo "Testing blob service endpoint..."
          az storage container list \
            --connection-string "$CONN_STRING" \
            --query '[].name' \
            -o table || echo "No containers yet (expected for new storage)"
          
          echo "✅ Integration tests completed"

      - name: Deployment Summary
        run: |
          echo "✅ Staging deployment completed"
          echo "Version: ${{ inputs.version }}"
          echo "Environment: staging"
          echo "Storage Account: ${{ secrets.azure_storage_name }}"
          echo "Resource Group: ${{ secrets.azure_resource_group }}"
