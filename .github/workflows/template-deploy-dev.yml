name: Deploy to Development (Reusable Template)

on:
  workflow_call:
    inputs:
      artifact_name:
        description: 'Name of the build artifact'
        required: true
        type: string
      version:
        description: 'Application version'
        required: true
        type: string
      project_number:
        description: 'PCM Project Number'
        required: false
        type: string
        default: 'RITM1185178'
    secrets:
      azure_client_id:
        required: true
      azure_tenant_id:
        required: true
      azure_subscription_id:
        required: true
      azure_resource_group:
        required: true
      azure_webapp_name:
        required: true
      azure_storage_name:
        required: true

jobs:
  deploy:
    name: Deploy to Dev
    runs-on: ubuntu-latest
    permissions:
      id-token: write  # Required for OIDC
      contents: read   # Required for artifact download
    environment:
      name: development
      url: https://dev-mcpcopilot.azurewebsites.net
    steps:
      - name: Download Build Artifact
        uses: actions/download-artifact@v4
        with:
          name: ${{ inputs.artifact_name }}
          path: ./publish

      - name: Login to Azure via OIDC
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.azure_client_id }}
          tenant-id: ${{ secrets.azure_tenant_id }}
          subscription-id: ${{ secrets.azure_subscription_id }}

      - name: Create/Update Storage Account (Dev)
        run: |
          RG="${{ secrets.azure_resource_group }}"
          LOCATION="eastus"
          STORAGE_NAME="${{ secrets.azure_storage_name }}"
          TIMESTAMP=$(date +%s)
          
          echo "Creating resource group..."
          az group create --name $RG --location $LOCATION
          
          echo "Creating storage account with dev tags (50 tags)..."
          PROJECT_NUMBER="${{ inputs.project_number }}"
          RUN_NUMBER="${{ github.run_number }}"
          COMMIT_SHA="${{ github.sha }}"
          
          az storage account create \
            --name $STORAGE_NAME \
            --resource-group $RG \
            --location $LOCATION \
            --sku Standard_LRS \
            --kind StorageV2 \
            --tags \
              pcm-application_name_sysid=placeholder \
              pcm-built_by="${{ github.actor }}@users.noreply.github.com" \
              pcm-business_service_sysid=SAVNS \
              pcm-project_number="$PROJECT_NUMBER" \
              pcm-sensitive_data_cjis=yes \
              pcm-sensitive_data_ferpa=no \
              pcm-sensitive_data_fti=no \
              pcm-sensitive_data_pci=no \
              pcm-sensitive_data_phi=no \
              pcm-sensitive_data_pii=yes \
              pcm-tag_1="SAVNS HB2582" \
              pcm-tag_2=placeholder \
              pcm-tag_3=placeholder \
              deployed-by="${{ github.actor }}" \
              deployment-timestamp="$TIMESTAMP" \
              github-run-id="${{ github.run_id }}" \
              github-run-number="$RUN_NUMBER" \
              commit-sha="${COMMIT_SHA:0:8}" \
              branch="${{ github.ref_name }}" \
              workflow="${{ github.workflow }}" \
              environment="development" \
              cost-center="CC-$RANDOM" \
              department="Engineering" \
              team="Platform" \
              owner="${{ github.repository_owner }}" \
              repository="${{ github.repository }}" \
              managed-by="github-actions" \
              automation="enabled" \
              backup-policy="daily" \
              retention-days="90" \
              compliance="required" \
              security-zone="internal" \
              data-classification="confidential" \
              service-tier="standard" \
              monitoring="enabled" \
              logging="enabled" \
              auto-tag-1="value-$RANDOM" \
              auto-tag-2="value-$RANDOM" \
              auto-tag-3="value-$RANDOM" \
              auto-tag-4="value-$RANDOM" \
              auto-tag-5="value-$RANDOM" \
              custom-id-1="$(uuidgen | cut -d'-' -f1)" \
              custom-id-2="$(uuidgen | cut -d'-' -f1)" \
              custom-id-3="$(uuidgen | cut -d'-' -f1)" \
              region="$LOCATION" \
              disaster-recovery="enabled" \
              high-availability="enabled" \
              performance-tier="standard" \
              network-access="private" \
              firewall-enabled="yes"

      - name: Verify Storage Account
        run: |
          echo "Verifying storage account deployment..."
          STORAGE_NAME="${{ secrets.azure_storage_name }}"
          RG="${{ secrets.azure_resource_group }}"
          
          # Check if storage account exists
          az storage account show \
            --name $STORAGE_NAME \
            --resource-group $RG \
            --query '{name:name, location:location, sku:sku.name, status:statusOfPrimary}' \
            -o table
          
          # Verify tags
          echo "\nVerifying tags..."
          az storage account show \
            --name $STORAGE_NAME \
            --resource-group $RG \
            --query 'tags' \
            -o json
          
          echo "\n✅ Storage account verification completed"

      - name: Deployment Summary
        run: |
          echo "✅ Development deployment completed"
          echo "Version: ${{ inputs.version }}"
          echo "Environment: development"
          echo "Storage Account: ${{ secrets.azure_storage_name }}"
          echo "Resource Group: ${{ secrets.azure_resource_group }}"
